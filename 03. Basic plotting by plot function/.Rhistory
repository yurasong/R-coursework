# generate heatmap
pheatmap(
as.matrix(sampleCor),
annotation_col =as.data.frame(colData(vsd)[,c(1,3)]),
main = "Correlation clustering",
width = 12,
height = 10
)
colData_e4 <- colData[c(1:5, 7:10),]
colData_e4
countData_e4 <- countData[, c(1:5, 7:10)]
dds_e4 <- DESeqDataSetFromMatrix(countData_e4, colData_e4, design = ~condition+batch)
dds_e4 <- DESeqDataSetFromMatrix(countData_e4, colData_e4, design = ~ batch + condition)
keep_e4 <- rowSums(counts(dds)) > 10
dds_e4 <- dds_e4[keep_e4,]
dds_e4 <- DESeq(dds_e4)
plotDispEsts(dds_e4, main="Dispersion Estimation")
b13d_vs_b13t <- results(dds_e4, contrast=c("condition", "B13D", "B13T"), alpha=0.1)
bad_vs_bat <- results(dds_e4, contrast=c("condition", "BAD", "BAT"), alpha=0.1)
b13t_vs_bad <- results(dds_e4, contrast=c("condition", "B13T", "BAD"), alpha=0.1)
b13t_vs_bat <- results(dds_e4, contrast=c("condition", "B13T", "BAT"), alpha=0.1)
b13d_vs_bad <- results(dds_e4, contrast=c("condition", "B13D", "BAD"), alpha=0.1)
b13d_vs_bat <- results(dds_e4, contrast=c("condition", "B13D", "BAT"), alpha=0.1)
b13d_vs_b13t_sh <- lfcShrink(dds_e4, contrast=c("condition", "B13D", "B13T"), alpha=0.1)
summary(b13d_vs_b13t_sh)
par(mfrow=c(1,2))
plotMA(b13d_vs_b13t_sh, ylim=c(-2,2), main="B13D vs B13T")
plot(
x = b13d_vs_b13t_sh$log2FoldChange,
y = -log10(b13d_vs_b13t_sh$padj),
col = ifelse(b13d_vs_b13t_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13D vs B13T",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
bad_vs_bat_sh <- lfcShrink(dds_e4, contrast=c("condition", "BAD", "BAT"), alpha=0.1)
summary(bad_vs_bat_sh)
par(mfrow=c(1,2))
plotMA(bad_vs_bat_sh, ylim=c(-2,2), main="BAD vs BAT")
plot(
x = bad_vs_bat_sh$log2FoldChange,
y = -log10(bad_vs_bat_sh$padj),
col = ifelse(bad_vs_bat_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change BAD vs BAT",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13t_vs_bad_sh <- lfcShrink(dds_e4, contrast=c("condition", "B13T", "BAD"), alpha=0.1)
summary(b13t_vs_bad_sh)
summary(b13t_vs_bad_sh)
par(mfrow=c(1,2))
plotMA(b13t_vs_bad_sh, ylim=c(-2,2), main="B13T vs BAD")
plot(
x = b13t_vs_bad_sh$log2FoldChange,
y = -log10(b13t_vs_bad_sh$padj),
col = ifelse(b13t_vs_bad_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13T vs BAD",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13t_vs_bat_sh <- lfcShrink(dds_e4, contrast=c("condition", "B13T", "BAT"), alpha=0.1)
summary(b13t_vs_bat_sh)
summary(b13t_vs_bat_sh)
par(mfrow=c(1,2))
plotMA(b13t_vs_bat_sh, ylim=c(-2,2), main="B13T vs BAT")
plot(
x = b13t_vs_bat_sh$log2FoldChange,
y = -log10(b13t_vs_bat_sh$padj),
col = ifelse(b13t_vs_bat_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13T vs BAT",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13d_vs_bad_sh <- lfcShrink(dds_e4, contrast=c("condition", "B13D", "BAD"), alpha=0.1)
b13d_vs_bad_sh <- lfcShrink(dds_e4, contrast=c("condition", "B13D", "BAD"), alpha=0.1)
summary(b13d_vs_bad_sh)
summary(b13d_vs_bad_sh)
par(mfrow=c(1,2))
plotMA(b13d_vs_bad_sh, ylim=c(-2,2), main="B13D vs BAD")
plot(
x = b13d_vs_bad_sh$log2FoldChange,
y = -log10(b13d_vs_bad_sh$padj),
col = ifelse(b13d_vs_bad_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13D vs BAD",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13d_vs_bat_sh <- lfcShrink(dds_e4, contrast=c("condition", "B13D", "BAT"), alpha=0.1)
summary(b13d_vs_bat_sh)
par(mfrow=c(1,2))
plotMA(b13d_vs_bat_sh, ylim=c(-2,2), main="B13D vs BAT")
plot(
x = b13d_vs_bat_sh$log2FoldChange,
y = -log10(b13d_vs_bat_sh$padj),
col = ifelse(b13d_vs_bat_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13D vs BAT",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13d_vs_b13t_sh <- b13d_vs_b13t_sh[ !is.na(b13d_vs_b13t_sh$padj), ]
b13d_vs_b13t_sh <- b13d_vs_b13t_sh[ !is.na(b13d_vs_b13t_sh$pvalue), ]
write.table(data.frame(b13d_vs_b13t_sh), "DESeq2_B13T_vs_B13DElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
bad_vs_bat_sh <- bad_vs_bat_sh[ !is.na(bad_vs_bat_sh$padj), ]
b13t_vs_bad_sh <- bad_vs_bat_sh[ !is.na(b13t_vs_bad_sh$padj), ]
b13t_vs_bat_sh <- b13t_vs_bat_sh[ !is.na(b13t_vs_bat_sh$padj), ]
b13t_vs_bad_sh <- bad_vs_bat_sh[ !is.na(b13t_vs_bad_sh$padj), ]
b13t_vs_bad_sh <- bad_vs_bat_sh[ !is.na(b13t_vs_bad_sh$pvalue), ]
write.table(data.frame(b13t_vs_bad_sh), "DESeq2_B13T_vs_BADElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13d_vs_b13t_sh <- b13d_vs_b13t_sh[ !is.na(b13d_vs_b13t_sh$padj), ]
b13d_vs_b13t_sh <- b13d_vs_b13t_sh[ !is.na(b13d_vs_b13t_sh$pvalue), ]
write.table(data.frame(b13d_vs_b13t_sh), "DESeq2_B13T_vs_B13DElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
bad_vs_bat_sh <- bad_vs_bat_sh[ !is.na(bad_vs_bat_sh$padj), ]
bad_vs_bat_sh <- bad_vs_bat_sh[ !is.na(bad_vs_bat_sh$pvalue), ]
write.table(data.frame(bad_vs_bat_sh), "DESeq2_BAT_vs_BADElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13t_vs_bad_sh <- bad_vs_bat_sh[ !is.na(b13t_vs_bad_sh$padj), ]
b13t_vs_bad_sh <- bad_vs_bat_sh[ !is.na(b13t_vs_bad_sh$pvalue), ]
write.table(data.frame(b13t_vs_bad_sh), "DESeq2_B13T_vs_BADElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13t_vs_bat_sh <- b13t_vs_bat_sh[ !is.na(b13t_vs_bat_sh$padj), ]
b13t_vs_bat_sh <- b13t_vs_bat_sh[ !is.na(b13t_vs_bat_sh$pvalue), ]
write.table(data.frame(b13t_vs_bat_sh), "DESeq2_B13T_vs_BATElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13d_vs_bad_sh <- b13d_vs_bad_sh[ !is.na(b13d_vs_bad_sh$padj), ]
b13d_vs_bad_sh <- b13d_vs_bad_sh[ !is.na(b13d_vs_bad_sh$pvalue), ]
write.table(data.frame(b13d_vs_bad_sh), "DESeq2_B13D_vs_BADElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13d_vs_bat_sh <- b13d_vs_bat_sh[ !is.na(b13d_vs_bat_sh$padj), ]
b13d_vs_bat_sh <- b13d_vs_bat_sh[ !is.na(b13d_vs_bat_sh$pvalue), ]
write.table(data.frame(b13d_vs_bat_sh), "DESeq2_B13D_vs_BATElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
write.table(counts(dds_e4 , normalized = TRUE), "Normalized-valuesElsa4_filt.csv", quote=F, sep="\t", row.names=T, col.names=T)
colData_e <- colData[c(1, 3:5, 7:10),]
colData_e
countData_e <- countData[,c(1, 3:5, 7:10)]
dds_e <- DESeqDataSetFromMatrix(countData_e, colData_e, design = ~ batch + condition)
keep_e <- rowSums(counts(dds)) > 0
dds_e <- dds_e[keep_e,]
dds_e <- DESeq(dds_e)
plotDispEsts(dds_e, main="Dispersion Estimation")
b13d_vs_b13t_e <- results(dds_e, contrast=c("condition", "B13D", "B13T"), alpha=0.1)
bad_vs_bat_e <- results(dds_e, contrast=c("condition", "BAD", "BAT"), alpha=0.1)
b13t_vs_bad_e <- results(dds_e, contrast=c("condition", "B13T", "BAD"), alpha=0.1)
b13t_vs_bat_e <- results(dds_e, contrast=c("condition", "B13T", "BAT"), alpha=0.1)
b13d_vs_bad_e <- results(dds_e, contrast=c("condition", "B13D", "BAD"), alpha=0.1)
b13d_vs_bat_e <- results(dds_e, contrast=c("condition", "B13D", "BAT"), alpha=0.1)
b13d_vs_b13t_e <- results(dds_e, contrast=c("condition", "B13D", "B13T"), alpha=0.1)
bad_vs_bat_e <- results(dds_e, contrast=c("condition", "BAD", "BAT"), alpha=0.1)
b13t_vs_bad_e <- results(dds_e, contrast=c("condition", "B13T", "BAD"), alpha=0.1)
b13t_vs_bat_e <- results(dds_e, contrast=c("condition", "B13T", "BAT"), alpha=0.1)
b13d_vs_bad_e <- results(dds_e, contrast=c("condition", "B13D", "BAD"), alpha=0.1)
b13d_vs_bat_e <- results(dds_e, contrast=c("condition", "B13D", "BAT"), alpha=0.1)
b13d_vs_b13t_e <- results(dds_e, contrast=c("condition", "B13D", "B13T"), alpha=0.1)
bad_vs_bat_e <- results(dds_e, contrast=c("condition", "BAD", "BAT"), alpha=0.1)
b13t_vs_bad_e <- results(dds_e, contrast=c("condition", "B13T", "BAD"), alpha=0.1)
b13t_vs_bat_e <- results(dds_e, contrast=c("condition", "B13T", "BAT"), alpha=0.1)
b13d_vs_bad_e <- results(dds_e, contrast=c("condition", "B13D", "BAD"), alpha=0.1)
b13d_vs_bat_e <- results(dds_e, contrast=c("condition", "B13D", "BAT"), alpha=0.1)
b13d_vs_b13t_esh <- lfcShrink(dds_e, contrast=c("condition", "B13D", "B13T"), alpha=0.1)
summary(b13d_vs_b13t_esh)
summary(b13d_vs_b13t_esh)
par(mfrow=c(1,2))
plotMA(b13d_vs_b13t_esh, ylim=c(-2,2), main="B13D vs B13T")
plot(
x = b13d_vs_b13t_esh$log2FoldChange,
y = -log10(b13d_vs_b13t_esh$padj),
col = ifelse(b13d_vs_b13t_esh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13D vs B13T",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
bad_vs_bat_esh <- lfcShrink(dds_e, contrast=c("condition", "BAD", "BAT"), alpha=0.1)
summary(bad_vs_bat_esh)
summary(bad_vs_bat_esh)
par(mfrow=c(1,2))
plotMA(bad_vs_bat_esh, ylim=c(-2,2), main="BAD vs BAT")
plot(
x = bad_vs_bat_esh$log2FoldChange,
y = -log10(bad_vs_bat_esh$padj),
col = ifelse(bad_vs_bat_esh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change BAD vs BAT",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13t_vs_bad_esh <- lfcShrink(dds_e, contrast=c("condition", "B13T", "BAD"), alpha=0.1)
b13t_vs_bad_esh <- lfcShrink(dds_e, contrast=c("condition", "B13T", "BAD"), alpha=0.1)
summary(b13t_vs_bad_esh)
summary(b13t_vs_bad_esh)
par(mfrow=c(1,2))
plotMA(b13t_vs_bad_esh, ylim=c(-2,2), main="B13T vs BAD")
plot(
x = b13t_vs_bad_esh$log2FoldChange,
y = -log10(b13t_vs_bad_esh$padj),
col = ifelse(b13t_vs_bad_esh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13T vs BAD",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13t_vs_bat_esh <- lfcShrink(dds_e, contrast=c("condition", "B13T", "BAT"), alpha=0.1)
summary(b13t_vs_bat_esh)
par(mfrow=c(1,2))
plotMA(b13t_vs_bat_esh, ylim=c(-2,2), main="B13T vs BAT")
plot(
x = b13t_vs_bat_esh$log2FoldChange,
y = -log10(b13t_vs_bat_esh$padj),
col = ifelse(b13t_vs_bat_esh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13T vs BAT",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13d_vs_bad_esh <- lfcShrink(dds_e, contrast=c("condition", "B13D", "BAD"), alpha=0.1)
summary(b13d_vs_bad_esh)
par(mfrow=c(1,2))
plotMA(b13d_vs_bad_esh, ylim=c(-2,2), main="B13D vs BAD")
plot(
x = b13d_vs_bad_esh$log2FoldChange,
y = -log10(b13d_vs_bad_esh$padj),
col = ifelse(b13d_vs_bad_esh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13D vs BAD",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13d_vs_bat_esh <- lfcShrink(dds_e, contrast=c("condition", "B13D", "BAT"), alpha=0.1)
summary(b13d_vs_bat_esh)
par(mfrow=c(1,2))
plotMA(b13d_vs_bat_esh, ylim=c(-2,2), main="B13D vs BAT")
plot(
x = b13d_vs_bat_esh$log2FoldChange,
y = -log10(b13d_vs_bat_esh$padj),
col = ifelse(b13d_vs_bat_esh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change B13D vs BAT",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
b13d_vs_b13t_esh <- b13d_vs_b13t_esh[ !is.na(b13d_vs_b13t_esh$padj), ]
b13d_vs_b13t_esh <- b13d_vs_b13t_esh[ !is.na(b13d_vs_b13t_esh$pvalue), ]
write.table(data.frame(b13d_vs_b13t_esh), "DESeq2_B13T_vs_B13D.csv", quote=F, sep="\t", row.names=T, col.names=T)
bad_vs_bat_esh <- bad_vs_bat_esh[ !is.na(bad_vs_bat_esh$padj), ]
bad_vs_bat_esh <- bad_vs_bat_esh[ !is.na(bad_vs_bat_esh$pvalue), ]
write.table(data.frame(bad_vs_bat_esh), "DESeq2_BAT_vs_BAD.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13t_vs_bad_esh <- bad_vs_bat_esh[ !is.na(b13t_vs_bad_esh$padj), ]
b13t_vs_bad_esh <- bad_vs_bat_esh[ !is.na(b13t_vs_bad_esh$pvalue), ]
write.table(data.frame(b13t_vs_bad_esh), "DESeq2_B13T_vs_BAD.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13t_vs_bat_esh <- b13t_vs_bat_esh[ !is.na(b13t_vs_bat_esh$padj), ]
b13t_vs_bat_esh <- b13t_vs_bat_esh[ !is.na(b13t_vs_bat_esh$pvalue), ]
write.table(data.frame(b13t_vs_bat_esh), "DESeq2_B13T_vs_BAT.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13d_vs_bad_esh <- b13d_vs_bad_esh[ !is.na(b13d_vs_bad_esh$padj), ]
b13d_vs_bad_esh <- b13d_vs_bad_esh[ !is.na(b13d_vs_bad_esh$pvalue), ]
write.table(data.frame(b13d_vs_bad_esh), "DESeq2_B13D_vs_BAD.csv", quote=F, sep="\t", row.names=T, col.names=T)
b13d_vs_bat_esh <- b13d_vs_bat_esh[ !is.na(b13d_vs_bat_esh$padj), ]
b13d_vs_bat_esh <- b13d_vs_bat_esh[ !is.na(b13d_vs_bat_esh$pvalue), ]
write.table(data.frame(b13d_vs_bat_esh), "DESeq2_B13D_vs_BAT.csv", quote=F, sep="\t", row.names=T, col.names=T)
write.table(counts(dds_e , normalized = TRUE), "Normalized-values.csv", quote=F, sep="\t", row.names=T, col.names=T)
save.image("Elsa_BC_two_batches.RData")
dds_MF <- dds_e4
levels(dds)
levels(dds_MF$type)
View(dds_MF)
library(DESeq2)
write.table(counts(dds, normalized = TRUE), 'Normalized_BC.csv', quote=F, sep=",", row.names=T, col.names=T)
setwd("/media/audrey/Group proje/Elsa/DESeq2/MERGING TWO BATCHES/16Oct2019 - Taking BC/Counts/temp")
rm(list=ls())
raw <- read.delim("rawcount.csv", h=T, sep=",")
norm <- read.delim("Normalized_no_filter_BC.csv", h=T, sep=",")
ann <- read.delim("annot.csv", h=T, sep=",")
head(ann)
m1 <- merge(ann, raw, by.x="Gene.ID", by.y="PeakID", all.x=F)
head(raw)
m1 <- merge(ann, raw, by.x="Gene.ID", by.y="PeakID", all.x=F)
m1 <- merge(ann, raw, by.x="Gene.ID", by.y="GeneID", all.x=F)
m2 <- merge(m1, norm, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(m2, "norm_noFilter_BC_all_batch.csv", quote=F, sep="\t", row.names=F, col.names=T)
count <- read.delim("../Counts/Elsa_merged_RNA_rawcount.csv", h=T, sep=",")
head(count)
count <- read.delim("rawcount.csv", h=T, sep=",")
head(count)
countData <- count[,2:11]
rownames(countData) <- count[,1]
colData <- data.frame(condition=c("B13D", "B13T", "B13T", "B13T", "B13D", "B13D", "BAT", "BAT", "BAD", "BAD"),
precise=c("ETI1_B13D", "ETI2_B13T","Elsa1_B13T1","Elsa2_B13T3", "Elsa3_B13D1","Elsa4_B13D2","Elsa5_BAT1", "Elsa6_BAT2","Elsa7_BAD1","Elsa8_BAD2"),
batch=c(rep("2", 2), rep("1", 8)))
rownames(colData) <- colnames(countData)
head(colData)
dds <- DESeqDataSetFromMatrix(countData, colData, design = ~batch + condition)
keep <- rowSums(counts(dds)) > 10
dds <- dds[keep,]
dds <- estimateSizeFactors(dds)
sizeFactors(dds)
boxplot(log2(1 + counts(dds, normalized = TRUE) ), las=3, cex.axis=0.8, ylab="log2(1+counts)", main="After normalization")
write.table(counts(dds, normalized = TRUE), "normcount.csv", quote=F, sep=",", row.names=T, col.names=T )
ann <- read.delim("annot.csv", h=T, sep=",")
raw <- read.delim("rawcount.csv", h=T, sep=",")
norm <- read.delim("rawcount.csv.csv", h=T, sep=",")
norm <- read.delim("rawcount.csv", h=T, sep=",")
m1 <- merge(ann, raw, by.x="Gene.ID", by.y="GeneID", all.x=F)
m2 <- merge(m1, norm, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(m2, "norm_noFilter_BC_all_batch.csv", quote=F, sep="\t", row.names=F, col.names=T)
setwd("~/Desktop/DESeq2 result")
a <- read.delim("annot.csv", h=T, sep="\t")
a <- read.delim("annot.csv", h=T, sep=",")
n <- read.delim("Normcount.csv", h=T, sep=",")
names(a)
names(n)
an <- merge(a, n, by.x="Gene.ID", by.y="GeneID", all.x=F)
i <- read.delim("DESeq2_B13D_vs_B13T.csv", h=T, sep=",")
names(i)
ai <- merge(a, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_B13T_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13D_vs_BAD.csv", h=T, sep=",")
ai <- merge(a, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_BAD_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13D_vs_BAT.csv", h=T, sep=",")
ai <- merge(a, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_BAT_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13T_vs_BAD.csv", h=T, sep=",")
ai <- merge(a, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13T_vs_BAD_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13T_vs_BAT.csv", h=T, sep=",")
ai <- merge(a, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13T_vs_BAT°annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_BAD_vs_BAT.csv", h=T, sep=",")
ai <- merge(a, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_BAD_vs_BAT°annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13D_vs_B13T.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_B13T_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13D_vs_BAD.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_BAD_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13D_vs_BAT.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_BAT_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13T_vs_BAD.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13T_vs_BAD_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13T_vs_BAT.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13T_vs_BAT°annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13T_vs_BAT.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13T_vs_BAT°annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_BAD_vs_BAT.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_BAD_vs_BAT°annot.csv", quote=F, sep=",", row.names=F, col.names=T)
load("~/Desktop/DESeq2 result/BC_downsample.RData")
write.table(count(dds_e4, normalized=T), "normcount.csv", quote=F, sep=",", row.names=T, col.names=T)
write.table(countss(dds_e4, normalized=T), "normcount.csv", quote=F, sep=",", row.names=T, col.names=T)
write.table(counts(dds_e4, normalized=T), "normcount.csv", quote=F, sep=",", row.names=T, col.names=T)
library(DESeq2)
write.table(counts(dds_e4, normalized=T), "normcount.csv", quote=F, sep=",", row.names=T, col.names=T)
rm(list=ls())
a <- read.delim("annot.csv", h=T, sep=",")
n <- read.delim("Normcount.csv", h=T, sep=",")
n <- read.delim("Normcount.csv", h=T, sep=",")
n <- read.delim("normcount.csv", h=T, sep=",")
an <- merge(a, n, by.x="Gene.ID", by.y="GeneID", all.x=F)
i <- read.delim("DESeq2_B13D_vs_B13T.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_B13T_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13D_vs_BAD.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_BAD_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13D_vs_BAT.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13D_vs_BAT_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13T_vs_BAD.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13T_vs_BAD_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_B13T_vs_BAT.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_B13T_vs_BAT_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
i <- read.delim("DESeq2_BAD_vs_BAT.csv", h=T, sep=",")
ai <- merge(an, i, by.x="Gene.ID", by.y="GeneID", all.x=F)
write.table(ai, "DESeq2_BAD_vs_BAT_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(an, "normcount_annot.csv", quote=F, sep="," row.names=F, col.names=T)
write.table(an, "normcount_annot.csv", quote=F, sep=",", row.names=F, col.names=T)
load("/home/audrey/.cache/.fr-jevzkY/batch2_control/heatmap.RData")
setwd("~/Desktop/R-coursework/03. Basic plotting by plot function")
setwd("~/Desktop/R-coursework/03. Basic plotting by plot function")
w1 <- read.csv(file="trees91.dat", sep=",", head=T)
names(w1)
View(w1)
rm(w1)
library(airquality)
data(airquality)
str(airquality)
stripchart(airquality$Ozone)
?stripchart
stripchart(airquality$Ozone,
main="Mean ozone in parts per billion at Roosevelt Island",
xlab="Parts Per Billion",
ylab="Ozone",
method="jitter",
col="orange",
pch=1
)
# prepare the data
temp <- airquality$Temp
# gererate normal distribution with same mean and sd
tempNorm <- rnorm(200,mean=mean(temp, na.rm=TRUE), sd = sd(temp, na.rm=TRUE))
# make a list
x <- list("temp"=temp, "norm"=tempNorm)
stripchart(x,
main="Multiple stripchart for comparision",
xlab="Degree Fahrenheit",
ylab="Temperature",
method="jitter",
col=c("orange","red"),
pch=16
)
stripchart(Temp~Month,
data=airquality,
main="Different strip chart for each month",
xlab="Months",
ylab="Temperature",
col="brown3",
group.names=c("May","June","July","August","September"),
vertical=TRUE,
pch=16
)
boxplot(airquality$Ozone)
boxplot(airquality$Ozone,
main = "Mean ozone in parts per billion at Roosevelt Island",
xlab = "Parts Per Billion",
ylab = "Ozone",
col = "orange",
border = "brown",
horizontal = TRUE,
notch = TRUE
)
b <- boxplot(airquality$Ozone)
b
b
# prepare the data
ozone <- airquality$Ozone
temp <- airquality$Temp
# gererate normal distribution with same mean and sd
ozone_norm <- rnorm(200,mean=mean(ozone, na.rm=TRUE), sd=sd(ozone, na.rm=TRUE))
temp_norm <- rnorm(200,mean=mean(temp, na.rm=TRUE), sd=sd(temp, na.rm=TRUE))
boxplot(ozone, ozone_norm, temp, temp_norm,
main = "Multiple boxplots for comparision",
at = c(1,2,4,5),
names = c("ozone", "normal", "temp", "normal"),
las = 2,
col = c("orange","red"),
border = "brown",
horizontal = TRUE,
notch = TRUE
)
boxplot(Temp~Month,
data=airquality,
main="Different boxplots for each month",
xlab="Month Number",
ylab="Degree Fahrenheit",
col="orange",
border="brown"
)
Temperature <- airquality$Temp
hist(Temperature)
# histogram with added parameters
hist(Temperature,
main="Maximum daily temperature at La Guardia Airport",
xlab="Temperature in degrees Fahrenheit",
xlim=c(50,100),
col="darkmagenta",
freq=FALSE
)
> h <- hist(Temperature)
h <- hist(Temperature)
h
h <- hist(Temperature,ylim=c(0,40))
text(h$mids,h$counts,labels=h$counts, adj=c(0.5, -0.5))
par=mfrow(c(1,2))
mfrow(par=c(1,2))
par(mfrow=c(1,2))
hist(Temperature, breaks=4, main="With breaks=4")
hist(Temperature, breaks=20, main="With breaks=20")
hist(Temperature,
main="Maximum daily temperature at La Guardia Airport",
xlab="Temperature in degrees Fahrenheit",
xlim=c(50,100),
col="chocolate",
border="brown",
breaks=c(55,60,70,75,80,100)
)
plot(airquality$Temp, airquality$Ozone)
pairs(airquality[,1:4])
plot(airquality$Temp, airquality$Ozone, col="red", pch =19)
plot(airquality$Temp, airquality$Ozone, col="red", pch =19)
plot(airquality$Temp, airquality$Ozone, col="red", pch =19, main="Relationship between Ozone reading and temperature")
?pairs
pairs(airquality[,1:4])
library(expenditure)
data(expenditure)
slices <- c(10, 12,4, 16, 8)
lbls <- c("US", "UK", "Australia", "Germany", "France")
pie(slices, labels = lbls, main="Pie Chart of Countries")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Pie Chart of Countries")
install.packages("plotrix")
library(plotrix)
pie3D(slices,labels=lbls,explode=0.1, main="Pie Chart of Countries ")
