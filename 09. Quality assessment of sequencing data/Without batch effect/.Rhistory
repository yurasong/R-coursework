count <- read.delim("data/rawcount.csv", h=T, sep=",")
head(count)
# Count matrix
countData <- count[,2:ncol(count)]
rownames(countData) <- count[,1]
colData <- data.frame(condition=c("Control", "Control", "Exp", "Exp"),
precise=c("CTRL1", "CTRL2", "Exp1", "Exp2"))
rownames(colData) <- colnames(countData)
colData
keep <- rowSums(counts(dds)) > 0
library(DESeq2)
library(pheatmap)
library(RColorBrewer)
library(tidyverse)
library(ggrepel)
library(ggfortify)
dds <- DESeqDataSetFromMatrix(countData, colData, design = ~ condition)
keep <- rowSums(counts(dds)) > 0
dds <- dds[keep,]
dds <- estimateSizeFactors(dds)
sizeFactors(dds)
boxplot(log2(1 + counts(dds, normalized = FALSE) ), las=3, cex.axis=0.8, ylab="log2(1+counts)", main="Before normalization")
boxplot(log2(1 + counts(dds, normalized = TRUE) ), las=3, cex.axis=0.8, ylab="log2(1+counts)", main="After normalization")
rld <- rlog(dds)
par(mfrow=c(2,2))
plot( counts(dds, normalized = TRUE)[,1:2], pch=16, cex=0.5, main = "No transformation-Control")
abline(0, 1, lty=4, col="red")
plot( counts(dds, normalized = TRUE)[,3:4], pch=16, cex=0.5, main = "No transformation-Exp")
abline(0, 1, lty=4, col="red")
plot( assay(rld)[,1:2], pch=16, cex=0.5, main="Reg-log-Control", xlim=c(0,20), ylim=c(0,20))
abline(0, 1, lty=4, col="red")
plot( assay(rld)[,3:4], pch=16, cex=0.5, main="Reg-log-Exp", xlim=c(0,20), ylim=c(0,20))
abline(0, 1, lty=4, col="red")
sampleDists <- dist( t( assay(rld) ) )
sampleDistMatrix <- as.matrix( sampleDists )
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors,
annotation_col =colData[,c(1,3)]
)
sampleDistMatrix <- as.matrix( sampleDists )
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors,
annotation_col =colData)
sampleDistMatrix <- as.matrix( sampleDists )
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors,
annotation_col =colData[,2])
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors,
annotation_col =colData)
# calculate correlation between pairs of samples for all possible pairs.
sampleCor <- cor(assay(rld))
# generate heatmap
pheatmap(
as.matrix(sampleCor),
annotation_col =as.data.frame(colData(rld)[,c(1,3)]),
main = "Correlation clustering",
width = 12,
height = 10
)
# generate heatmap
pheatmap(
as.matrix(sampleCor),
annotation_col =as.data.frame(colData(rld)[,1]),
main = "Correlation clustering",
width = 12,
height = 10
)
# generate heatmap
pheatmap(
as.matrix(sampleCor),
annotation_col =as.data.frame(colData(rld)$condition),
main = "Correlation clustering",
width = 12,
height = 10
)
# generate heatmap
pheatmap(
as.matrix(sampleCor),
annotation_col =as.data.frame(colData(rld)),
main = "Correlation clustering",
width = 12,
height = 10
)
# generate heatmap
pheatmap(
as.matrix(sampleCor),
annotation_col =as.data.frame(colData(rld)[,c(1,2)]),
main = "Correlation clustering",
width = 12,
height = 10
)
save.image("QA_no_batch.RData")
