library(DESeq2)
library(pheatmap)
library(RColorBrewer)
count <- read.delim("data/rawcount.csv", h=T, sep=",")
head(count)
View(count)
count <- count[,c(1:2, 4, 6:ncol(count))]
head(count)
countData <- count[,2:ncol(count)]
rownames(countData) <- count[,1]
colData <- data.frame(condition=c("D13A", "D13A", "D13B", "D13B", "AdultA", "AdultA", "AdultB", "AdultB"),
precise=c("D13_A1", "D13_A3", "D13_B2","D13_B3","Adult_D1", "Adult_D2","Adult_B1","Adult_B2"),
batch=c("1", "2", "1", "2", rep("1", 4)))
rownames(colData) <- colnames(countData)
head(colData)
dds <- DESeqDataSetFromMatrix(countData, colData, design = ~batch + condition)
keep <- rowSums(counts(dds)) > 10
dds <- dds[keep,]
dds <- estimateSizeFactors(dds)
sizeFactors(dds)
dds <- estimateSizeFactors(dds)
sizeFactors(dds)
boxplot(log2(1 + counts(dds, normalized = FALSE) ), las=3, cex.axis=0.8, ylab="log2(1+counts)", main="Before normalization")
boxplot(log2(1 + counts(dds, normalized = TRUE) ), las=3, cex.axis=0.8, ylab="log2(1+counts)", main="After normalization")
rld <- rlog(dds)
hs <- hclust(dist(t(assay(rld))))
plot(hs)
library(factoextra)
library(ggfortify)
library(ggrepel)
pca <- prcomp(t(assay(rld)), center=TRUE, scale.=FALSE)
fviz_eig(pca)
plotPCA(rld, intgroup="condition") + geom_text_repel(aes(label = colData(rld)$precise))
plotPCA(rld, intgroup="batch") + geom_text_repel(aes(label = colData(rld)$precise))
##Batch effect removed
```{r batch effect correction}
vsd <- vst(dds, blind=FALSE)
vsd <- vst(dds, blind=FALSE)
mat <- assay(vsd)
mat <- assay(vsd)
mat <- limma::removeBatchEffect(mat, vsd$batch)
assay(vsd) <- mat
plotPCA(vsd) + geom_text_repel(aes(label = colData(rld)$precise)) + ggtitle("Sample PCA, regularized-log-transformed normalized data")
hst <- hclust(dist(t(assay(rld))))
plot(hst)
dds <- DESeq(dds)
plotDispEsts(dds, main="Dispersion Estimation")
colData
D13A_vs_D13B <- results(dds, contrast=c("condition", "D13A", "D13B"), alpha=0.1)
AdultA_vs_AdultB <- results(dds, contrast=c("condition", "AdultA", "AdultB"), alpha=0.1)
D13B_vs_AdultA <- results(dds, contrast=c("condition", "D13B", "AdultA"), alpha=0.1)
D13B_vs_AdultB <- results(dds, contrast=c("condition", "D13B", "AdultB"), alpha=0.1)
D13A_vs_AdultA <- results(dds, contrast=c("condition", "D13A", "AdultA"), alpha=0.1)
D13A_vs_AdultB <- results(dds, contrast=c("condition", "D13A", "AdultB"), alpha=0.1)
D13A_vs_D13B_sh <- lfcShrink(dds, contrast=c("condition", "D13A", "D13B"), alpha=0.1)
D13A_vs_D13B_sh <- lfcShrink(dds, contrast=c("condition", "D13A", "D13B"), alpha=0.1)
summary(D13A_vs_D13B_sh)
summary(D13A_vs_D13B_sh)
par(mfrow=c(1,2))
plotMA(D13A_vs_D13B_sh, ylim=c(-2,2), main="D13A vs D13B")
plot(
x = D13A_vs_D13B_sh$log2FoldChange,
y = -log10(D13A_vs_D13B_sh$padj),
col = ifelse(D13A_vs_D13B_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change D13A vs D13B",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
AdultA_vs_AdultB_sh <- lfcShrink(dds, contrast=c("condition", "AdultA", "AdultB"), alpha=0.1)
summary(AdultA_vs_AdultB_sh)
summary(AdultA_vs_AdultB_sh)
par(mfrow=c(1,2))
plotMA(AdultA_vs_AdultB_sh, ylim=c(-2,2), main="AdultA vs AdultB")
plot(
x = AdultA_vs_AdultB_sh$log2FoldChange,
y = -log10(AdultA_vs_AdultB_sh$padj),
col = ifelse(AdultA_vs_AdultB_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change AdultA vs AdultB",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
D13B_vs_AdultA_sh <- lfcShrink(dds, contrast=c("condition", "D13B", "AdultA"), alpha=0.1)
summary(D13B_vs_AdultA_sh)
summary(D13B_vs_AdultA_sh)
par(mfrow=c(1,2))
plotMA(D13B_vs_AdultA_sh, ylim=c(-2,2), main="D13B vs AdultA")
plot(
x = D13B_vs_AdultA_sh$log2FoldChange,
y = -log10(D13B_vs_AdultA_sh$padj),
col = ifelse(D13B_vs_AdultA_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change D13B vs AdultA",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
D13B_vs_AdultB_sh <- lfcShrink(dds, contrast=c("condition", "D13B", "AdultB"), alpha=0.1)
summary(D13B_vs_AdultB_sh)
summary(D13B_vs_AdultB_sh)
par(mfrow=c(1,2))
plotMA(D13B_vs_AdultB_sh, ylim=c(-2,2), main="D13B vs AdultB")
plot(
x = D13B_vs_AdultB_sh$log2FoldChange,
y = -log10(D13B_vs_AdultB_sh$padj),
col = ifelse(D13B_vs_AdultB_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change D13B vs AdultB",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
D13A_vs_AdultA_sh <- lfcShrink(dds, contrast=c("condition", "D13A", "AdultA"), alpha=0.1)
summary(D13A_vs_AdultA_sh)
par(mfrow=c(1,2))
plotMA(D13A_vs_AdultA_sh, ylim=c(-2,2), main="D13A vs AdultA")
plot(
x = D13A_vs_AdultA_sh$log2FoldChange,
y = -log10(D13A_vs_AdultA_sh$padj),
col = ifelse(D13A_vs_AdultA_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change D13A vs AdultA",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
D13A_vs_AdultB_sh <- lfcShrink(dds, contrast=c("condition", "D13A", "AdultB"), alpha=0.1)
D13A_vs_AdultB_sh <- lfcShrink(dds, contrast=c("condition", "D13A", "AdultB"), alpha=0.1)
summary(D13A_vs_AdultB_sh)
summary(D13A_vs_AdultB_sh)
par(mfrow=c(1,2))
plotMA(D13A_vs_AdultB_sh, ylim=c(-2,2), main="D13A vs AdultB")
plot(
x = D13A_vs_AdultB_sh$log2FoldChange,
y = -log10(D13A_vs_AdultB_sh$padj),
col = ifelse(D13A_vs_AdultB_sh$padj<0.1 , "red", "grey30"),
pch = 20, cex = 0.5,
xlab = "log2 Fold Change D13A vs AdultB",
ylab = "log10(adjusted Pvalue)",
main="adjusted p-value < 0.1"
)
dir.create(results)
path <- file.path(res_dir, "Results")
res_dir <- file.path("Results")
dir.create(res_dir)
res_dir <- file.path("Results") # Giving path of directory
dir.create(res_dir) # Creating directory
D13A_vs_D13B_sh <- D13A_vs_D13B_sh[ !is.na(D13A_vs_D13B_sh$padj), ]
D13A_vs_D13B_sh <- D13A_vs_D13B_sh[ !is.na(D13A_vs_D13B_sh$pvalue), ]
write.table(data.frame(D13A_vs_D13B_sh), "DESeq2_D13A_vs_D13B.csv", quote=F, sep="\t", row.names=T, col.names=T)
D13A_vs_AdultA_sh <- D13A_vs_AdultA_sh[ !is.na(D13A_vs_AdultA_sh$padj), ]
D13A_vs_AdultA_sh <- D13A_vs_AdultA_sh[ !is.na(D13A_vs_AdultA_sh$pvalue), ]
write.table(data.frame(D13A_vs_AdultA_sh), "DESeq2_D13A_vs_AdultA.csv", quote=F, sep="\t", row.names=T, col.names=T)
D13A_vs_AdultB_sh <- D13A_vs_AdultB_sh[ !is.na(D13A_vs_AdultB_sh$padj), ]
D13A_vs_AdultB_sh <- D13A_vs_AdultB_sh[ !is.na(D13A_vs_AdultB_sh$pvalue), ]
write.table(data.frame(D13A_vs_AdultB_sh), "DESeq2_D13A_vs_AdultB.csv", quote=F, sep="\t", row.names=T, col.names=T)
D13B_vs_AdultA_sh <- D13B_vs_AdultA_sh[ !is.na(D13B_vs_AdultA_sh$padj), ]
D13B_vs_AdultA_sh <- D13B_vs_AdultA_sh[ !is.na(D13B_vs_AdultA_sh$pvalue), ]
write.table(data.frame(D13B_vs_AdultA_sh), "DESeq2_D13B_vs_AdultA.csv", quote=F, sep="\t", row.names=T, col.names=T)
D13B_vs_AdultB_sh <- D13B_vs_AdultB_sh[ !is.na(D13B_vs_AdultB_sh$padj), ]
D13B_vs_AdultB_sh <- D13B_vs_AdultB_sh[ !is.na(D13B_vs_AdultB_sh$pvalue), ]
write.table(data.frame(D13B_vs_AdultB_sh), "DESeq2_D13B_vs_AdultB.csv", quote=F, sep="\t", row.names=T, col.names=T)
AdultA_vs_AdultB_sh <- AdultA_vs_AdultB_sh[ !is.na(AdultA_vs_AdultB_sh$padj), ]
AdultA_vs_AdultB_sh <- AdultA_vs_AdultB_sh[ !is.na(AdultA_vs_AdultB_sh$pvalue), ]
write.table(data.frame(AdultA_vs_AdultB_sh), "DESeq2_AdultA_vs_AdultB.csv", quote=F, sep="\t", row.names=T, col.names=T)
save.image("DEG.RData")
savehistory("DEG.Rhistory")
